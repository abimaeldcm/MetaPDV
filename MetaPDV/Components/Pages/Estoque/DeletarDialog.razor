@using System.Globalization
@using MetaPDV.Models
@inherits ComponentBase

<!-- Bootstrap CSS CDN -->
<link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<link href="_content/MudBlazor/MudBlazor.min.css" rel="stylesheet" />
<style>
    .modal-content.light-theme {
        background-color: #ffffff;
        color: #000000;
    }

    .modal-content.dark-theme {
        background-color: #333333;
        color: #ffffff;
    }

    .modal-content .modal-header {
        border-bottom: 1px solid #e5e5e5;
    }

    .modal-content .modal-footer {
        border-top: 1px solid #e5e5e5;
    }
</style>
@if (ShowDialog)
{
    <div class="modal fade show d-block" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered" role="document">
            <div class="modal-content @(CurrentTheme)">
                <div class="modal-header">
                    <h5 class="modal-title text-center w-100">Confirmação Deleção</h5>
                    <button type="button" class="close" aria-label="Close" @onclick="Cancel">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body text-center">
                    <p>@ContentText</p>
                    <p>Item: @ItemDelete.Nome</p>
                </div>
                <div class="modal-footer justify-content-center">
                    <MudButton Color="Color.Success" @onclick="Confirm" Variant="Variant.Filled" Class="m-2" FullWidth="true">
                        <MudIcon Icon="@Icons.Material.Filled.Check" />
                        Confirmar
                    </MudButton>
                    <MudButton Color="Color.Error" @onclick="Cancel" Variant="Variant.Filled" Class="m-2" FullWidth="true">
                        <MudIcon Icon="@Icons.Material.Filled.Close" />
                        Cancelar
                    </MudButton>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Parameter] public bool ShowDialog { get; set; }
    [Parameter] public string ContentText { get; set; }
    [Parameter] public Mercadoria ItemDelete { get; set; }
    [Parameter] public EventCallback<bool> OnClose { get; set; }
    [Parameter] public string CurrentTheme { get; set; } = "light-theme";


    private async Task Cancel()
    {
        await OnClose.InvokeAsync(false);
    }

    private async Task Confirm()
    {
        await OnClose.InvokeAsync(true);
    }
}
